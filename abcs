using System;
using System.Net;
using System.Net.Mail;
using System.Web.Http;
using System.Web.Http.Cors;

namespace WebApplication1.Controllers
{
    [EnableCors(origins: "*", headers: "*", methods: "*")] // Cho ph√©p test t·ª´ tr√¨nh duy·ªát
    public class MailController : ApiController
    {
        [HttpPost]
        [Route("api/mail/send")]
        public IHttpActionResult SendMail([FromBody] MailRequest request)
        {
            if (request == null)
                return BadRequest("Thi·∫øu d·ªØ li·ªáu email!");

            try
            {
                // üì® C·∫•u h√¨nh SMTP
                string senderEmail = "Asset-sys@local.canon-vn.com.vn";
                string smtpServer = "nonauth-smtp.global.canon.co.jp";
                int smtpPort = 25;
                string smtpUser = "Asset-sys@local.canon-vn.com.vn";
                string smtpPassword = "YourPasswordHere"; // ƒë·ªïi n·∫øu c·∫ßn

                // üßæ T·∫°o email
                MailMessage mail = new MailMessage();
                mail.From = new MailAddress(senderEmail);
                mail.To.Add(request.To);
                mail.Subject = request.Subject ?? "üìß Th√¥ng b√°o t·ª´ h·ªá th·ªëng";
                mail.Body = request.Body ?? "hello";  // n·∫øu kh√¥ng g·ª≠i g√¨, m·∫∑c ƒë·ªãnh l√† ‚Äúhello‚Äù
                mail.IsBodyHtml = true; // cho ph√©p HTML trong n·ªôi dung

                using (SmtpClient smtp = new SmtpClient(smtpServer, smtpPort))
                {
                    smtp.Credentials = new NetworkCredential(smtpUser, smtpPassword);
                    smtp.EnableSsl = true; // c√≥ th·ªÉ t·∫Øt n·∫øu server n·ªôi b·ªô kh√¥ng y√™u c·∫ßu
                    smtp.Send(mail);
                }

                return Ok(new { message = "‚úÖ Email ƒë√£ ƒë∆∞·ª£c g·ª≠i th√†nh c√¥ng!" });
            }
            catch (Exception ex)
            {
                return BadRequest($"‚ùå L·ªói g·ª≠i email: {ex.Message}");
            }
        }
    }

    // üß© Model d·ªØ li·ªáu POST
    public class MailRequest
    {
        public string To { get; set; }        // Ng∆∞·ªùi nh·∫≠n
        public string Subject { get; set; }   // Ti√™u ƒë·ªÅ
        public string Body { get; set; }      // N·ªôi dung email (v√≠ d·ª•: "hello")
    }



<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Mini HTTP Tester</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      max-width: 800px;
      margin: 40px auto;
      background: #f9f9f9;
      padding: 20px;
      border-radius: 12px;
      box-shadow: 0 0 10px rgba(0,0,0,0.1);
    }
    h1 { text-align: center; color: #333; }
    input, select, textarea, button {
      width: 100%; padding: 10px; margin: 8px 0; border: 1px solid #ccc;
      border-radius: 8px; font-size: 14px;
    }
    button {
      background: #007bff; color: white; font-weight: bold; border: none; cursor: pointer;
    }
    button:hover { background: #0056b3; }
    pre {
      background: #222; color: #0f0; padding: 15px;
      border-radius: 8px; overflow-x: auto;
    }
  </style>
</head>
<body>
  <h1>HTTP POST Tester</h1>
  <label>API URL:</label>
  <input id="url" type="text" placeholder="http://localhost:5000/api/mail/send" />

  <label>Method:</label>
  <select id="method">
    <option value="POST">POST</option>
    <option value="GET">GET</option>
  </select>

  <label>Request Body (JSON):</label>
  <textarea id="body" rows="8">
{
  "To": "anh.nguyen707@mail.canon",
  "Subject": "Test API g·ª≠i mail",
  "Body": "hello"
}
  </textarea>

  <button onclick="sendRequest()">üöÄ G·ª≠i Request</button>

  <h3>K·∫øt qu·∫£:</h3>
  <pre id="response"></pre>

  <script>
    async function sendRequest() {
      const url = document.getElementById('url').value;
      const method = document.getElementById('method').value;
      const body = document.getElementById('body').value;
      const responseElement = document.getElementById('response');

      try {
        const res = await fetch(url, {
          method: method,
          headers: { 'Content-Type': 'application/json' },
          body: method === 'POST' ? body : undefined
        });
        const text = await res.text();
        responseElement.textContent = `Status: ${res.status}\n\n${text}`;
      } catch (error) {
        responseElement.textContent = '‚ùå L·ªói: ' + error.message;
      }
    }
  </script>
</body>
</html>

}
